@using EGH01.Models.EGHRGE;
@using EGH01DB.Primitives;
@using EGH01DB.Objects;
@using EGH01DB.Types;
@using EGH01.Core;
@using EGH01.Core;
@using EGH01.Models.EGH;
@using EGH01DB.Primitives;
@using EGH01DB.Objects;
@using EGH01DB.Types;

@model EGH01DB.RGEContext
@{
    Layout = "~/Views/Shared/EGHLayout.cshtml";
    ViewBag.Title = "MapPoint";
    Menu head = new Menu(
                             );

    Menu create = new Menu(
                  new Menu.MenuItem("Создать", "IndexCreate", true)
                );

}

<head>
    <link rel="stylesheet" href="https://openlayers.org/en/v4.6.5/css/ol.css" type="text/css">
    <!--<script src="https://code.jquery.com/jquery-1.11.2.js" integrity="sha256-WMJwNbei5YnfOX5dfgVCS5C4waqvc+/0fV7W2uy3DyU=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>-->
    <script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL"></script>
    <script src="https://openlayers.org/en/v4.6.5/build/ol.js"></script>
</head>


<div class="box">
    <form>
        <input type="checkbox" id="Layers1" onclick="toggleLayer(layers1)" value="Hide Layer" checked> <label for="Layers1">Административные деления</label>
        <input type="checkbox" id="Layers2" onclick="toggleLayer(layers2)" value="Toggle VectorLayer Visibility" checked><label for="Layers2">Заповедники местные </label>
        <input type="checkbox" id="Layers3" onclick="toggleLayer(layers3)" value="Toggle BaseLayer Visibility" checked><label for="Layers3">Заповедники региональные</label>
    </form>
    <div>
        <label class="boxdata-label-20">Тип объекта:&nbsp; Точка</label>
        <label class="boxdata-label-20">Проекция:&nbsp; EPSG:4326</label>
    </div>
    <div class="row">
        <div class="col-xs-8">

            <div id="map" class="map"></div>
            <div id="mouse-position"></div>
            <form id="options-form">

                <div class="form-inline">
                    <select name="geom-type" id="type" style="display:none">
                        <option value="Point"></option>
                    </select>
                </div>
            </form>
            </div>
        <div class="col-xs-4 sidebar">
            @*@using (Html.BeginForm("IndexCreate", "EGHMAP"))
                {*@

            <div class="boxdata">
                <p>
                    <label class="boxdata-label-20">Широта</label>
                    <input readonly class="boxdata-input-10" type="text" id="Latitude" name="Latitude" value="@ViewData["Latitude"]" />&deg;
                    <input readonly class="boxdata-input-10" type="text" id="Lat_m" name="Lat_m" value="@ViewData["Lat_m"]" />&acute;
                    <input readonly class="boxdata-input-10" type="text" id="Lat_s" name="Lat_s" value="@ViewData["Lat_s"]" />&quot;
                </p>
                <p>
                    <label class="boxdata-label-20">Долгота</label>
                    <input readonly class="boxdata-input-10" type="text" id="Lngitude" name="Lngitude" value="@ViewData["Lngitude"]" />&deg;
                    <input readonly class="boxdata-input-10" type="text" id="Lng_m" name="Lng_m" value="@ViewData["Lng_m"]" />&acute;
                    <input readonly class="boxdata-input-10" type="text" id="Lng_s" name="Lng_s" value="@ViewData["Lng_s"]" />&quot;

                </p>
            </div>

            <div style="display:none" id="divv">

                <div class="box">
                    <label id="heightt"></label><span id="height"></span>
                </div>

                <div class="box">
                    <label id="waterdeepp"></label><span id="waterdeep"></span>
                </div>
                @*@if (@ViewData["waterProtectionArea"] != null)
                    {*@
                <div class="box">
                    <label id="waterProtectionAreaa"></label><span id="waterProtectionArea"></span>
                </div>
                @*}*@
                <div class="box">
                    <label id="time_migrationn"></label><span id="time_migration"></span>
                </div>

                @*@if ()
                    {*@
                <div class="box">
                    <label id="ecoWW"></label><span id="ecoW"></span>
                </div>
                @*}*@

                @*@if (ViewData["eco"] != null)
                    {*@
                <div class="box">
                    <label id="ecoo"></label><span id="eco"></span>
                </div>
                @*}*@
                <div class="box">
                    <label id="self_cleaning_zonee"></label><span id="self_cleaning_zone"></span>
                </div>
                <div class="box">
                    <label id="regionn"></label><span id="region"></span>
                    <br>
                    <label id="districtt"></label><span id="district"></span>
                    @*@if (ViewData["city"] != null)
                        {*@
                    <br>
                    <label id="cityy"></label><span id="city"></span>
                    @*}*@
                </div>
                @*@if (@ViewData["soilType"] != null)


                    {*@
                <div class="box">
                    <label id="soill"></label><span id="soil"></span>
                </div>
                @*}*@
                <div class="box">
                    <label id="water_intakee"></label><span id="water_intake"></span>
                </div>
                <div class="box">
                    @*@if (@ViewData["ground"] != null)
                        {*@
                    @*<label id="groundd" style="display:none"></label><span id="ground"></span>
                        <br>*@
                    @*}*@
                    <label id="waterfilterr"></label><span id="waterfilter"></span>
                    <br>
                    <label id="porosityy"></label><span id="porosity"></span>
                    <br>
                    <label id="watercapacityy"></label><span id="watercapacity"></span>
                </div>
            </div>

            <div class="radio">
                <label>
                    <input type="radio" name="interaction_type" value="draw" id="interection_type_draw" checked>
                    Создать &nbsp;
                </label>
            </div>
            <div class="radio">
                <label>
                    <input type="radio" name="interaction_type" value="modify" id="interaction_type_modify" />
                    Изменить &nbsp;
                </label>
            </div>


            <div id="buttons-map">
                <div class="box">
                    @*@Html.Partial("_TypeLineMenu", create)*@

                    <button id="clear" class="Очистить" title="Очистить"></button>
                    <span id="result"></span>
                    <input type="hidden" id="coords" value="27,54">
                    <button type="button" class="Центр" title="Центр" value="Центр" onclick="centerMap()"></button>
                </div>
            </div>
            <canvas class="ol-unselectable" width="1000" height="5" style="width: 100%; height: 100%;"></canvas>

        </div>
    </div>
    </div>

        <script type="text/javascript">

            var raster = new ol.layer.Tile({
                source: new ol.source.OSM(),
                name: 'OSM'
            });
            var vector = new ol.layer.Vector({
                source: new ol.source.Vector({
                }),
                style: new ol.style.Style({
                    fill: new ol.style.Fill({
                        color: 'rgba(255, 255, 255, 0.2)'
                    }),
                    stroke: new ol.style.Stroke({
                        color: '#ffcc33',
                        width: 2
                    }),
                    image: new ol.style.Circle({
                        radius: 7,
                        fill: new ol.style.Fill({
                            color: '#ffcc33'
                        })
                    })
                })
            });

            var layers1 = new ol.layer.Tile({
                source: new ol.source.TileWMS({
                    url: 'http://195.50.2.82:8080/geoserver/EGH/wms?',
                    params: {
                        'LAYERS': 'EGH:RegionMap',
                        'VERSION': '1.1.1',
                        'FORMAT': 'image/png',
                        'TILED': true
                    },
                    serverType: 'geoserver'
                })
            });
            var layers2 = new ol.layer.Tile({
                source: new ol.source.TileWMS({
                    url: 'http://195.50.2.82:8080/geoserver/EGH/wms?',
                    params: {
                        'LAYERS': 'EGH:EcoLocalPolyMap',
                        'VERSION': '1.1.1',
                        'FORMAT': 'image/png',
                        'TILED': true
                    },
                    visible: false,
                    serverType: 'geoserver'
                })
            });

            var layers3 = new ol.layer.Tile({
                source: new ol.source.TileWMS({
                    url: 'http://195.50.2.82:8080/geoserver/EGH/wms?',
                    params: {
                        'LAYERS': 'EGH:EcoRepublicPolyMap',
                        'VERSION': '1.1.1',
                        'FORMAT': 'image/png',
                        'TILED': true
                    },
                    serverType: 'geoserver'
                })
            });

            var layers = [raster, layers1, layers2, layers3, vector];
            var myFormat = function (dgts) {
                return (
                    function (coord1) {
                        var coord2 = [coord1[1], coord1[0]];
                        return ol.coordinate.toStringHDMS(coord2, dgts);
                    });
            }
            var mousePositionControl = new ol.control.MousePosition({
                coordinateFormat: myFormat(0),
                projection: 'EPSG:4326',
                className: 'custom-mouse-position',
                target: document.getElementById('mouse-position'),
                undefinedHTML: '&nbsp;'
            });
            var scaleLineControl = new ol.control.ScaleLine();
            var view = new ol.View({
                center: [3200000, 7100000],
                zoom: 6.8
            })
            var map = new ol.Map({
                controls: ol.control.defaults({
                    attributionOptions:
                    ({
                        collapsible: false
                    }),
                }).extend([mousePositionControl, scaleLineControl]),
                layers: layers,
                target: 'map',
                view: view

            });

            function hideLayer(layerName) {
                layerName.setVisible(false);
            }

            function toggleLayer(layerName) {
                if (layerName.getVisible() == true) {
                    layerName.setVisible(false);
                } else {
                    layerName.setVisible(true);
                }
            }

            map.on('click', function (evt) {
                var coordinate = evt.coordinate;
                var template = '{x}';
                var hdms = ol.coordinate.format(ol.proj.transform(coordinate, 'EPSG:3857', 'EPSG:4326'), template, 4);
                var res = "";
                var template = '{y}';
                document.getElementById('Latitude').value = deg_to_dms(hdms);
                document.getElementById('Lat_m').value = deg_to_dmsm(hdms);
                document.getElementById('Lat_s').value = deg_to_dmss(hdms);
                var hdms2 = ol.coordinate.format(ol.proj.transform(coordinate, 'EPSG:3857', 'EPSG:4326'), template, 4);
                document.getElementById('Lngitude').value = deg_to_dms(hdms2);
                document.getElementById('Lng_m').value = deg_to_dmsm(hdms2);
                document.getElementById('Lng_s').value = deg_to_dmss(hdms2);

     
                var Latitude = {
                    Lngitude: deg_to_dms(hdms2),
                    Lng_m: deg_to_dmsm(hdms2),
                    Lng_s: deg_to_dmss(hdms2),
                    Latitude: deg_to_dms(hdms),
                    Lat_m: deg_to_dmsm(hdms),
                    Lat_s: deg_to_dmss(hdms)
                };

                $.ajax({
                    url: '/EGHMAP/CreateFromAjax',
                    type: 'POST',
                    dataType: 'application/json',
                    data: JSON.stringify(Latitude),
                    contentType: 'application/json; charset=utf-8',
                    dataFilter: function (data) {
                        data = JSON.parse(data);
                        var obj = document.getElementById('divv');
                        obj.style.display = "block";
            
                        $("#height").html(data.Высота);
                        $("#waterdeep").html(data.Waterdeep);
                        $("#waterProtectionArea").html(data.WaterProtectionArea);
                        $("#time_migration").html(data.Time_migration);
                        $("#ecoW").html(data.EcoW);
                        $("#eco").html(data.Eco);
                        $("#self_cleaning_zone").html(data.Self_cleaning_zone);
                        $("#district").html(data.District);
                        $("#region").html(data.Region);
                        $("#city").html(data.City);
                        $("#ground").html(data.Ground);
                        $("#soil").html(data.Soil);
                        $("#water_intake").html(data.Water_intake);
                        $("#waterfilter").html(data.Waterfilter);
                        $("#porosity").html(data.Porosity);
                        $("#watercapacity").html(data.Watercapacity);


                        $("#heightt").html("Высота");
                        $("#waterdeepp").html("Глубина грунтовых вод:");
                        $("#waterProtectionAreaa").html("Водоохранная область:");
                        $("#time_migrationn").html("Время миграции нефтепродукта:");
                        $("#ecoWW").html("Экологический объект:");
                        $("#ecoo").html("Заповедники и парки:");
                        $("#self_cleaning_zonee").html("Способность к самоочищению:");
                        $("#districtt").html("Область:");
                        $("#regionn").html("Регион:");
                        $("#cityy").html("Город:");
                        $("#groundd").html("Тип грунта:");
                        $("#soill").html("Тип почвы:");
                        $("#water_intakee").html("Зона водозабора:");
                        $("#waterfilterr").html("Коэффициент фильтрации воды:");
                        $("#porosityy").html("Пористость:");
                        $("#watercapacityy").html(" Влагоемкость:");

                       
                        alert(data.Высота);


                    }
                });


            });


            function deg_to_dms(hdms) {
                var d = Math.floor(hdms);
                var minfloat = (hdms - d) * 60;
                var m = Math.floor(minfloat);
                var secfloat = (minfloat - m) * 60;
                var s = Math.round(secfloat);
                if (s == 60) {
                    m++;
                    s = 0;
                }
                if (m == 60) {
                    d++;
                    m = 0;
                }
                return (d);
            }
            function deg_to_dmsm(hdms) {
                var d = Math.floor(hdms);
                var minfloat = (hdms - d) * 60;
                var m = Math.floor(minfloat);
                var secfloat = (minfloat - m) * 60;
                var s = Math.round(secfloat);
                if (s == 60) {
                    m++;
                    s = 0;
                }
                if (m == 60) {
                    d++;
                    m = 0;
                }
                return (m);
            }
            function deg_to_dmss(hdms) {
                var d = Math.floor(hdms);
                var minfloat = (hdms - d) * 60;
                var m = Math.floor(minfloat);
                var secfloat = (minfloat - m) * 60;
                var s = Math.round(secfloat);
                if (s == 60) {
                    m++;
                    s = 0;
                }
                if (m == 60) {
                    d++;
                    m = 0;
                }
                return (s);
            }
            function centerMap() {
                var lonlat = document.getElementById('coords').value;
                var lonlat1 = lonlat.split(",");
                var lonlat2 = lonlat.split(",").map(Number);

                map.getView().setCenter(ol.proj.transform(lonlat2, 'EPSG:4326', 'EPSG:3857'));
                map.getView().setZoom(7.0);
            }
            var Modify = {
                init: function () {
                    this.select = new ol.interaction.Select();
                    map.addInteraction(this.select);

                    this.modify = new ol.interaction.Modify({
                        features: this.select.getFeatures()
                    });
                    map.addInteraction(this.modify);

                    this.setEvents();
                },
                setEvents: function () {
                    var selectedFeatures = this.select.getFeatures();

                    this.select.on('change:active', function () {
                        selectedFeatures.forEach(selectedFeatures.remove, selectedFeatures);
                    });
                },
                setActive: function (active) {
                    this.select.setActive(active);
                    this.modify.setActive(active);
                }
            };
            Modify.init();

            var optionsForm = document.getElementById('options-form');

            var Draw = {
                init: function () {
                    map.addInteraction(this.Point);
                    this.Point.setActive(false);


                },
                Point: new ol.interaction.Draw({
                    source: vector.getSource(),
                    type: ('Point'),

                }),

                getActive: function () {
                    return this.activeType ? this[this.activeType].getActive() : false;
                },
                setActive: function (active) {
                    var type = optionsForm.elements['geom-type'].value;
                    if (active) {
                        this.activeType && this[this.activeType].setActive(false);
                        this[type].setActive(true);
                        this.activeType = type;
                    } else {
                        this.activeType && this[this.activeType].setActive(false);
                        this.activeType = null;
                    }
                }
            };
            Draw.init();

            optionsForm.onchange = function (e) {
                var type = e.target.getAttribute('name');
                var value = e.target.value;
                if (type == 'geom-type') {
                    Draw.getActive() && Draw.setActive(true);
                } else if (type == 'interaction') {
                    if (value == 'modify') {
                        Draw.setActive(false);
                        Modify.setActive(true);
                    } else if (value == 'draw') {
                        Draw.setActive(true);
                        Modify.setActive(false);
                    }
                }
            };

            Draw.setActive(true);
            Modify.setActive(false);

            var snap = new ol.interaction.Snap({
                source: vector.getSource()
            });
            map.addInteraction(snap);


            var clearButton = document.getElementById('clear');
            clearButton.addEventListener('click', function (event) {
                vector.getSource().clear();

            });

        </script>
        
